//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceAuthReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceAuthReference.IAuth")]
    public interface IAuth {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuth/Auth", ReplyAction="http://tempuri.org/IAuth/AuthResponse")]
        bool Auth(BasicLib.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuth/Auth", ReplyAction="http://tempuri.org/IAuth/AuthResponse")]
        System.Threading.Tasks.Task<bool> AuthAsync(BasicLib.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuth/Initialize", ReplyAction="http://tempuri.org/IAuth/InitializeResponse")]
        BasicLib.User Initialize();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuth/Initialize", ReplyAction="http://tempuri.org/IAuth/InitializeResponse")]
        System.Threading.Tasks.Task<BasicLib.User> InitializeAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthChannel : Client.ServiceAuthReference.IAuth, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthClient : System.ServiceModel.ClientBase<Client.ServiceAuthReference.IAuth>, Client.ServiceAuthReference.IAuth {
        
        public AuthClient() {
        }
        
        public AuthClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Auth(BasicLib.User user) {
            return base.Channel.Auth(user);
        }
        
        public System.Threading.Tasks.Task<bool> AuthAsync(BasicLib.User user) {
            return base.Channel.AuthAsync(user);
        }
        
        public BasicLib.User Initialize() {
            return base.Channel.Initialize();
        }
        
        public System.Threading.Tasks.Task<BasicLib.User> InitializeAsync() {
            return base.Channel.InitializeAsync();
        }
    }
}
